# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥
# —Å—Ç—Ä–æ–∫—É, –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª
# —É–∂–µ –≤—Å—Ç—Ä–µ—á–∞–ª—Å—è. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–æ–≤ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫
# —Å–∏–º–≤–æ–ª–∞–º —Å –ø–æ–º–æ—â—å—é –ø–æ—Å—Ç—Ñ–∏–∫—Å–∞ —Ñ–æ—Ä–º–∞—Ç–∞ _n.
# Input: a a a b c a a d c d d
# Output: a a_1 a_2 b c a_3 a_4 d c_1 d_1 d_2
# –î–ª—è —Ä–µ—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é
# .split()


def count_repeats(string):
    # —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    my_dict = {}
    # —Ä–∞–∑–¥–µ–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ –ø—Ä–æ–±–µ–ª—É –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    my_list = string.split()
    # –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º —Å–ø–∏—Å–∫–∞
    for element in my_list:
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Ç–æ—á–Ω–æ –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–º –Ω—É–∂–µ–Ω
        if element in my_dict:
            # –µ—Å–ª–∏ –¥–∞, –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç—Ñ–∏–∫—Å
            my_dict[element] += 1
        else:
            # –∏–Ω–∞—á–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞  –≤ —Å–ª–æ–≤–∞—Ä–µ
            my_dict[element] = 1

    # —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    result_string = ''

    # –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ª–æ–≤–∞—Ä—è
    for element in my_dict:
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –±–æ–ª—å—à–µ –ª–∏ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å —Ç–∞–∫–∏–º –∂–µ –∑–Ω–∞—á–µ–Ω–∏–µ–º
        if my_dict[element] > 1:
            # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç—Ñ–∏–∫—Å
            result_string += element + '_' + str(my_dict[element]) + ' '
        else:
            # –¥–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –±–µ–∑ –ø–æ—Å—Ç—Ñ–∏–∫—Å–∞
            result_string += element + ' '

    return result_string


string = 'a a a b c a a b d c d d d'
print(count_repeats(string))


stroka = input().split()
result = {}
for i in stroka:
    if i in result:
        print(f'{i}_{result[i]}', end=' ')
    else:
        print(i, end=' ')
        result[i] = result.get(i, 0) + 1


# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç(—Å—Ç—Ä–æ–∫–∞). –°–ª–æ–≤–æ–º —Å—á–∏—Ç–∞–µ—Ç—Å—è
# –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–µ–ø—Ä–æ–±–µ–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏–¥—É—â–∏—Ö
# –ø–æ–¥—Ä—è–¥, —Å–ª–æ–≤–∞ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –æ–¥–Ω–∏–º –∏–ª–∏ –±–æ–ª—å—à–∏–º —á–∏—Å–ª–æ–º
# –ø—Ä–æ–±–µ–ª–æ–≤. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ª–æ–≤
# —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ —ç—Ç–æ–º —Ç–µ–∫—Å—Ç–µ.
# Input: She sells sea shells on the sea shore The shells
# that she sells are sea shells I'm sure.So if she sells sea
# shells on the sea shore I'm sure that the shells are sea
# shore shells
# Output: 13

text = input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç: ')
words = text.lower().split()  # —Ä–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å–ª–æ–≤–∞ –∏ –≤—ã—Ä–∞–≤–Ω–∏–º–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä 
unique_words = set(words)  # –∏—â–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞ –≤ —Ç–µ–∫—Å—Ç–µ

print('–í –≤–∞—à–µ–º —Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å ' + str(len(unique_words)) + ' —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ª–æ–≤.')


# –í–∞–Ω—è –∏ –ü–µ—Ç—è –ø–æ—Å–ø–æ—Ä–∏–ª–∏, –∫—Ç–æ –±—ã—Å—Ç—Ä–µ–µ —Ä–µ—à–∏—Ç
# —Å–ª–µ–¥—É—é—â—É—é –∑–∞–¥–∞—á—É: ‚Äú–ó–∞–¥–∞–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
# –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª. –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å
# –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
# –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º
# –≤—Å—Ç—Ä–µ—Ç–∏–≤—à–∏–º—Å—è –Ω—É–ª–µ–º (—á–∏—Å–ª–æ 0 –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤
# –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å)‚Äù. –û–¥–Ω–∞–∫–æ 2 –¥—Ä—É–≥–∞ –æ–∫–∞–∑–∞–ª–∏—Å—å –Ω–µ
# —Ç–∞–∫–∏–º–∏ —Å–º—ã—à–ª–µ–Ω—ã–º–∏. –ù–∏–∫—Ç–æ –∏–∑ —Ä–µ–±—è—Ç –Ω–µ —Å–º–æ–≥ –¥–æ
# –∫–æ–Ω—Ü–∞ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ. –û–Ω–∏ —Ä–µ—à–∏–ª–∏ —Ç–∞–∫: —É –∫–æ–≥–æ
# –±—É–¥–µ—Ç –º–µ–Ω—å—à–µ –æ—à–∏–±–æ–∫ –≤ –∫–æ–¥–µ, —Ç–æ—Ç –∏ –≤—ã–∏–≥—Ä–∞–ª —Å–ø–æ—Ä. –ó–∞
# –ø–æ–º–æ—â—å—é —Ç–æ–≤–∞—Ä–∏—â–∏ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –í–∞–º, —Å—Ç—É–¥–µ–Ω—Ç–∞–º.
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ü—Ä–æ–≥—Ä–∞–º–º–Ω—ã–µ –∫–æ–¥—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏—Ö
# —Å–ª–∞–π–¥–∞—Ö

# –í–∞–Ω—è:
# n = int(input())
# max_number = 1000
# while n != 0:
# n = int(input())
#     if max_number > n:
#         max_number = n
# print(max_number)

# –ü–µ—Ç—è:
# n = int(input())
# max_number = -1
# while n < 0:
# n = int(input())
#     if max_number < n:
#         n = max_number
# print(n)

n = int(input('Enter'))
max_number = n
while n != 0:
    n = int(input())
if max_number < n:
    max_number = n
print(max_number)

# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞,
# —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –ø–æ –æ–¥–Ω–æ–º—É —Å–ª–æ–≤—É –∏–∑ –ø–µ—Ä–µ—á–Ω—è "–∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞", "—è—â–µ—Ä–∏—Ü–∞" –∏–ª–∏ "–°–ø–æ–∫".
# –ù–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–ø–∏—Å–∞–Ω –≤—ã–±–æ—Ä –¢–∏–º—É—Ä–∞, –Ω–∞ –≤—Ç–æ—Ä–æ–π ‚Äì –≤—ã–±–æ—Ä –†—É—Å–ª–∞–Ω–∞.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∂–µ—Ä–µ–±—å—ë–≤–∫–∏:
# –∫—Ç–æ –ø–æ–±–µ–¥–∏–ª - –¢–∏–º—É—Ä –∏–ª–∏ –†—É—Å–ª–∞–Ω, –∏–ª–∏ –æ–Ω–∏ —Å—ã–≥—Ä–∞–ª–∏ –≤–Ω–∏—á—å—é.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ: –Ω–æ–∂–Ω–∏—Ü—ã —Ä–µ–∂—É—Ç –±—É–º–∞–≥—É.
# –ë—É–º–∞–≥–∞ –∑–∞–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∫–∞–º–µ–Ω—å.
# –ö–∞–º–µ–Ω—å –¥–∞–≤–∏—Ç —è—â–µ—Ä–∏—Ü—É, –∞ —è—â–µ—Ä–∏—Ü–∞ —Ç—Ä–∞–≤–∏—Ç –°–ø–æ–∫–∞, –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –°–ø–æ–∫ –ª–æ–º–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã,
# –∫–æ—Ç–æ—Ä—ã–µ, –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å, –æ—Ç—Ä–µ–∑–∞—é—Ç –≥–æ–ª–æ–≤—É —è—â–µ—Ä–∏—Ü–µ, –∫–æ—Ç–æ—Ä–∞—è –µ—Å—Ç –±—É–º–∞–≥—É,
# –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —É–ª–∏–∫–∏ –ø—Ä–æ—Ç–∏–≤ –°–ø–æ–∫–∞. –°–ø–æ–∫ –∏—Å–ø–∞—Ä—è–µ—Ç –∫–∞–º–µ–Ω—å, –∞ –∫–∞–º–µ–Ω—å, —Ä–∞–∑—É–º–µ–µ—Ç—Å—è, –∑–∞—Ç—É–ø–ª—è–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã.


a = input()
b = input()
m = {'–∫–∞–º–µ–Ω—å-–∫–∞–º–µ–Ω—å': '–Ω–∏—á—å—è', '–∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã': '–¢–∏–º—É—Ä', '–∫–∞–º–µ–Ω—å-–±—É–º–∞–≥–∞': '–†—É—Å–ª–∞–Ω',
     '–∫–∞–º–µ–Ω—å-—è—â–µ—Ä–∏—Ü–∞': '–¢–∏–º—É—Ä', '–∫–∞–º–µ–Ω—å-–°–ø–æ–∫': '–†—É—Å–ª–∞–Ω', '–Ω–æ–∂–Ω–∏—Ü—ã-–Ω–æ–∂–Ω–∏—Ü—ã': '–Ω–∏—á—å—è',
     '–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞': '–¢–∏–º—É—Ä', '–Ω–æ–∂–Ω–∏—Ü—ã-–∫–∞–º–µ–Ω—å': '–†—É—Å–ª–∞–Ω', '–Ω–æ–∂–Ω–∏—Ü—ã-—è—â–µ—Ä–∏—Ü–∞': '–¢–∏–º—É—Ä',
     '–Ω–æ–∂–Ω–∏—Ü—ã-–°–ø–æ–∫': '–†—É—Å–ª–∞–Ω', '–±—É–º–∞–≥–∞-–±—É–º–∞–≥–∞': '–Ω–∏—á—å—è', '–±—É–º–∞–≥–∞-–∫–∞–º–µ–Ω—å': '–¢–∏–º—É—Ä',
     '–±—É–º–∞–≥–∞-–Ω–æ–∂–Ω–∏—Ü—ã': '–†—É—Å–ª–∞–Ω', '–±—É–º–∞–≥–∞-—è—â–µ—Ä–∏—Ü–∞': '–†—É—Å–ª–∞–Ω', '–±—É–º–∞–≥–∞-–°–ø–æ–∫': '–†—É—Å–ª–∞–Ω',
     '—è—â–µ—Ä–∏—Ü–∞-—è—â–µ—Ä–∏—Ü–∞': '–Ω–∏—á—å—è', '—è—â–µ—Ä–∏—Ü–∞-–°–ø–æ–∫': '–¢–∏–º—É—Ä', '—è—â–µ—Ä–∏—Ü–∞-–Ω–æ–∂–Ω–∏—Ü—ã': '–†—É—Å–ª–∞–Ω',
     '—è—â–µ—Ä–∏—Ü–∞-–±—É–º–∞–≥–∞': '–¢–∏–º—É—Ä', '—è—â–µ—Ä–∏—Ü–∞-–∫–∞–º–µ–Ω—å': '–†—É—Å–ª–∞–Ω', '–°–ø–æ–∫-–°–ø–æ–∫': '–Ω–∏—á—å—è',
     '–°–ø–æ–∫-–Ω–æ–∂–Ω–∏—Ü—ã': '–¢–∏–º—É—Ä', '–°–ø–æ–∫-–±–∞–º–∞–≥–∞': '–†—É—Å–ª–∞–Ω', '–°–ø–æ–∫-–∫–∞–º–µ–Ω—å': '–¢–∏–º—É—Ä',
     '–°–ø–æ–∫-—è—â–µ—Ä–∏—Ü–∞': '–†—É—Å–ª–∞–Ω'}
if a == b:
    print("–ü–æ–±–µ–¥–∏–ª–∞ –¥—Ä—É–∂–±–∞!")
else:
    print(f'–ü–æ–±–µ–¥–∏–ª{m[a + "-" + b]}')

# –û—Ä–µ–ª –∏ —Ä–µ—à–∫–∞

# –î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ –±—É–∫–≤ —Ä—É—Å—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞ "–û" –∏ "–†". 
# –ë—É–∫–≤–∞ "–û" ‚Äì —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—ã–ø–∞–¥–µ–Ω–∏—é –û—Ä–ª–∞, –∞ –±—É–∫–≤–∞ "–†" ‚Äì —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—ã–ø–∞–¥–µ–Ω–∏—é –†–µ—à–∫–∏. 
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ä—è–¥ –≤—ã–ø–∞–≤—à–∏—Ö –†–µ—à–µ–∫.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ –±—É–∫–≤ —Ä—É—Å—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞ "–û" –∏ "–†".

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ä—è–¥ –≤—ã–ø–∞–≤—à–∏—Ö –†–µ—à–µ–∫.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ï—Å–ª–∏ –≤—ã–ø–∞–≤—à–∏—Ö –†–µ—à–µ–∫ –Ω–µ—Ç, —Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ
# 0
# 0.

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢
# Sample Input 1:
# –û–†–†–û–†–û–†–û–û–†–†–†–û
# Sample Output 1:
# 3
# Sample Input 2:
# –û–û–û–û–û–û–†–†–†–û–†–û–†–†–†–†–†–†–†
# Sample Output 2:
# 7
# Sample Input 3:
# –û–û–û–û–†–†–†–†–û–†–û–†–†–†–†–†–†–†–†–û–û–†–û–†–û–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†
# Sample Output 3:
# 31


# line = '–û–û–û–û–†–†–†–†–û–†–û–†–†–†–†–†–†–†–†–û–û–†–û–†–û–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†'
# max_count = 0
# count = 0

# for i in range(len(line) - 1):
#     if line[i] == line[i+1]:
#         count += 1
#     else:
#         if count > max_count:
#             max_count = count + 1
#         count = 0
# if count > max_count:
#     max_count = count + 1

# print(max_count)

line = input().lower()
t=0
while "—Ä"*(t+1) in line:
    t+=1
if t!=0:
    print(t)
else:
    print(0)



# –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –ê–Ω—Ç–æ–Ω, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ì–∏–ª—Ñ–æ–π–ª–æ–º, –≤–∑–ª–æ–º–∞–ª —Å–µ—Ç—å —É–º–Ω—ã—Ö —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–≤. 
# –¢–µ–ø–µ—Ä—å –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∏—Ö –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å–µ—Ä–≤–µ—Ä–æ–≤ "–ü–µ–≥–æ–≥–æ –¥—É–¥–æ—á–Ω–∏–∫–∞". 
# –ü–æ–º–æ–≥–∏—Ç–µ –≤–ª–∞–¥–µ–ª—å—Ü—É —Ñ–∏—Ä–º—ã –æ—Ç—ã—Å–∫–∞—Ç—å –≤—Å–µ –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã–µ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∏.

# –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å—Ç—Ä–æ–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ —Å—Ç—Ä–æ—á–Ω—ã—Ö –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä, 
# –∏ –µ—Å–ª–∏ –≤ –Ω–µ–π –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–ª–æ–≤–æ "anton" (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä—è–¥–æ–º —Å—Ç–æ—è—â–∏–µ –±—É–∫–≤—ã, –≥–ª–∞–≤–Ω–æ–µ –Ω–∞–ª–∏—á–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –±—É–∫–≤), 
# —Ç–æ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –∑–∞—Ä–∞–∂–µ–Ω –∏ –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞, –Ω—É–º–µ—Ä–∞—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –µ–¥–∏–Ω–∏—Ü—ã

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—ë—Ç—Å—è —á–∏—Å–ª–æ n
# n ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–≤. 
# –í –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö n
# n —Å—Ç—Ä–æ–∫–∞—Ö –≤–≤–æ–¥—è—Ç—Å—è —Å—Ç—Ä–æ–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã, –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ –æ—Ç
# 5
# 5 –¥–æ 100
# 100 —Å–∏–º–≤–æ–ª–æ–≤.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä–∞ –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã—Ö —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. 
# –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–≤ –Ω–µ—Ç, –Ω–∏—á–µ–≥–æ –≤—ã–≤–æ–¥–∏—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.


# Sample Input 1:
# 6
# 222anton456
# a1n1t1o1n1
# 0000a0000n00t00000o000000n
# gylfole
# richard
# ant0n
# Sample Output 1:
# 1 2 3
# Sample Input 2:
# 9
# osfjwoiergwoignaewpjofwoeijfnwfonewfoignewtowenffnoeiwowjfninoiwfen
# anton
# aoooooooooontooooo
# elelelelelelelelelel
# ntoneeee
# tonee
# 253235235a5323352n25235352t253523523235oo235523523523n
# antoooooooooooooooooooooooooooooooooooooooooooooooooooon
# unton
# Sample Output 2:
# 1 2 7 8

inStr = input('–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ')

def AntonSearcher(inString):
    searchWord = "anton"
    searchIndex = 0

    for i in inString:
        if i == searchWord[searchIndex]:
            searchIndex += 1
            if searchIndex == len(searchWord):
                return True
            return False

i = 0
for s in inStr.split():
    if AntonSearcher(s):
        print(i)
        i += 1

n = int(input())
list1 = []
for i in range(n):
    a = input()
    if 'a' in a:
        a = a[a.find('a'):]
        if 'n' in a:
            a = a[a.find('n'):]
            if 't' in a:
                a = a[a.find('t'):]
                if 'o' in a:
                    a = a[a.find('o'):]
                    if 'n' in a:
                        list1.append(i + 1)
print(*list1)